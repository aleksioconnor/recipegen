{"version":3,"sources":["QuestionButtons.js","QuestionView.js","animations.js","questions.js","RecipeView.js","DietButtons.js","LandingPage.js","App.js","index.js"],"names":["QuestionButtons","oval","question","clickBlock","checkClickBlock","buttonRefs","ovalButtonRefs","ovalContainRefs","buttons","answer_options","map","n","index","key","answer_id","className","ref","button","onClick","answer_text","ovalButtons","style","left","height","width","cx","cy","rx","ry","fill","x","y","textAnchor","fontSize","fontFamily","dy","display","QuestionView","currentQuestionIndex","setNextQuestion","questions","setClickBlock","useRef","useState","isFirstRun","setOval","useEffect","console","log","reduce","r","e","length","current","TweenLite","to","top","resetButtonPositions","_","forEach","singleRef","resetOvalButtonPositions","opacity","ease","Power2","easeInOut","TimelineLite","onComplete","onCompleteParams","staggerTo","Back","config","buttonIntro","eventCallback","fadeIn","setNext","clickedButtonRef","contain","buttonTween","easeIn","delay","scaleY","transformOrigin","ovalClickAnimation","scaleX","buttonClickAnimation","question_text","questionAnswerPairs","category","question_id","answer_tag_category","answer_tag","question_category","next_question","RecipeView","props","containRef","gradientRef","homeRef","finalRecipes","setFinalRecipes","likes","setLikes","clicked","setClicked","finalRecipe","setFinalRecipe","recipePriority","fireBaseInit","a","database","firebaseState","once","asd","recipeJson","toJSON","filteredRecipes","sortedTags","newArr","tags","tag","includes","sortTags","recipe","thisArrayShouldBeAllTrue","selectedDietTags","dietTag","doesItInclude","push","every","val","pop","random","Math","floor","tweeny","introAnimation","likeRecipe","orderByChild","equalTo","id","on","snapshot","update","Object","assign","func","tween","animateFunction","goHome","name","time","servings","backgroundImage","img","generateRandom","min","max","notThisOne","findIndex","num","drawNewRecipe","keys","ingredients","instructions","Number","DietButtons","selectedTags","setSelectedTags","buttonClicked","setFadeIn","elements","myTween","visibility","play","diet","dietn","copyOfSelectedTags","slice","remove","buttonClick","ifDF","LandingPage","refButton","refTitle","refSub","refMainContainer","refCard","refBack","refFront","setButtonClicked","animation","setAnimation","whatIsThisRef","tweenButton","start","reverse","src","alt","checkForClickBlock","CSSPlugin","defaultTransformPerspective","TweenMax","set","rotationY","tl","TimelineMax","paused","flipCard","App","drawQuestion","len","emptyArr","selected","shuffle","thisManyQuestions","setQuestions","setCurrentQuestionIndex","setTags","landingPage","setLandingPage","setSelectedDietTags","setFirebaseState","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","restart","answer","newTags","WebFont","load","google","families","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1459460f.chunk.js","sourcesContent":["\n    import React from 'react';\n    import {useEffect, useRef, useState} from 'react';\n\n    const QuestionButtons = ({oval, question, clickBlock, checkClickBlock, buttonRefs, ovalButtonRefs, ovalContainRefs}) => {\n\n\n    const buttons = question.answer_options.map((n, index) => <div key={n.answer_id + 60} className='single-question-button-contain'><button \n        ref={button => buttonRefs[index] = button} \n        className={clickBlock ? 'question-button no-pointer' : 'question-button'} \n        onClick={()=>checkClickBlock(n, buttonRefs[index])} \n        key={n.answer_id}>\n            {n.answer_text}\n    </button></div>)\n\n    const ovalButtons = question.answer_options.map((n, index) => <div key={n.answer_id + 40} ref={n => ovalContainRefs[index] = n} className='oval-question-button-contain' style={{left: ((index+1)%2)===0 ? 30 : -30}}>\n    <svg key={n.answer_id + 10} height=\"100\" width=\"260\">\n        <ellipse className={`ovalbutton ${clickBlock ? 'no-pointer' : ''}`} cx=\"130\" cy=\"50\" rx=\"130\" ry=\"40\" style={{fill: \"#ee936c\"} } key={n.answer_id + 20}\n        ref={button => ovalButtonRefs[index] = button} \n        onClick={()=>checkClickBlock(n, ovalButtonRefs[index], ovalContainRefs[index])} >\n        </ellipse>\n        <text className={`ovaltext ${clickBlock ? 'no-pointer' : ''}`} x=\"50%\" y=\"50%\" textAnchor=\"middle\" fill=\"black\" fontSize=\"15 px\" fontFamily=\"Roboto\" dy=\".3em\" key={n.answer_id + 30}>{n.answer_text}</text>\n        </svg>\n    </div>\n)\n        return (\n            <div>\n                <div style={oval ? {display: \"block\"} : {display: \"none\"}}>{ovalButtons}</div>\n                <div style={oval ? {display: \"none\"} : {display: \"flex\"}} className=\"question-button-container\">{buttons}</div>\n            </div>\n        )\n\n    }\n    \nexport default QuestionButtons\n","import React from 'react';\nimport {useEffect, useRef, useState} from 'react';\nimport _ from 'lodash'\nimport {buttonIntro, resetButtonPositions, buttonClickAnimation, fadeIn, ovalClickAnimation, resetOvalButtonPositions} from './animations'\nimport QuestionButtons from './QuestionButtons'\n\n\nconst QuestionView = ({currentQuestionIndex, setNextQuestion, questions, clickBlock, setClickBlock}) => {\n    // Set current question\n    const ref = useRef(null);\n    const [buttonRefs, setButtonRefs] = useState([])\n    const [ovalButtonRefs, setOvalButtonRefs] = useState([])\n    const [ovalContainRefs, setOvalContainRefs] = useState([])\n    const isFirstRun = useRef(true)\n    const [oval, setOval] = useState(true)\n    const question = questions[currentQuestionIndex]\n\n    // Intro animation\n    useEffect(() => {\n        console.log(clickBlock, \"value of block\")\n        // set prop\n        setOval((question.answer_options.map((n) => n.answer_text).reduce((r, e) => r.length < e.length ? e : r, \"\")).length > 18)\n\n        // if it is not the first run\n        if(!isFirstRun.current) {\n            resetButtonPositions(buttonRefs)\n        }\n        resetOvalButtonPositions(ovalButtonRefs, ovalContainRefs)\n\n        // set first run false in case of first run\n        if (isFirstRun) isFirstRun.current = false;\n\n        //enable blocking\n        setClickBlock(true)\n\n        // normal buttons\n        if(!oval) {\n            buttonIntro(ref, setClickBlock, buttonRefs)\n        }\n\n        //oval buttons\n        if(oval) {\n            fadeIn(ref, setClickBlock, ovalButtonRefs, ovalContainRefs)\n        }\n        \n      }, [buttonRefs, currentQuestionIndex, oval, ovalButtonRefs, ovalContainRefs, question.answer_options, setClickBlock]);\n\n\n    const setNext = (n, clickedButtonRef, contain) => {\n        setClickBlock(true) // when animation begins, enable clickblock \n        if(!oval) {\n            buttonClickAnimation(setNextQuestion, clickedButtonRef, ref, n)\n        }\n        else ovalClickAnimation(setNextQuestion, clickedButtonRef, ref, n, contain)\n    }\n\n    const checkClickBlock = (n, clickedButtonRef, contain) => {\n        if (clickBlock) {\n            return null\n        }\n        else {\n            setNext(n, clickedButtonRef, contain)\n        }\n    }\n\n\n\n    return (\n        <div className='main-container'>\n            <div ref={ref} className='question-contain'>\n                <h3 className='question-title'>{question.question_text}</h3>\n                <div>\n                    <QuestionButtons ovalContainRefs={ovalContainRefs} clickBlock={clickBlock} checkClickBlock={checkClickBlock} setNext={setNext} buttonRefs={buttonRefs} ovalButtonRefs={ovalButtonRefs} question={question} \n                    oval={oval}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default QuestionView","import {TweenLite, Power2, TimelineLite, Back} from \"gsap/TweenMax\";\nimport _ from 'lodash'\n\nconst buttonIntro = (ref, setClickBlock, buttonRefs) => {\n    const tween = TweenLite.to(ref.current, 0.3, { opacity: 1, ease: Power2.easeInOut})\n    const otherTween = new TimelineLite({onComplete: setClickBlock, onCompleteParams: [false]})\n        .staggerTo(buttonRefs, 0.9, {top: 0, ease: Back.easeInOut.config(0.7)}, 0.2)\n}\n\n\nconst fadeIn = (ref, setClickBlock, buttonRefs, ovalContainRefs) => { // oval intro\n    const tweenfs = TweenLite.to(ref.current, 0.01, { opacity: 1, ease: Power2.easeInOut})\n    const tweenfsd = TweenLite.to(ref.current, 1, { opacity: 1, ease: Power2.easeInOut})\n    tweenfsd.eventCallback(\"onComplete\", setClickBlock, [false])\n\n    _.forEach(ovalContainRefs, (singleRef, index) => {\n        if(index % 2 === 0) {\n            TweenLite.to(singleRef, 1, {left: 30, ease: Power2.easeInOut})\n        }\n        else TweenLite.to(singleRef, 1, {left: -30, ease: Power2.easeInOut})\n    })\n\n}\n\nconst resetButtonPositions = (buttonRefs) => {\n    TweenLite.to(buttonRefs, 0, {top: 800}) // forces buttons to default position\n}\n\nconst resetOvalButtonPositions = (buttonRefs, ovalContainRefs) => {\n    _.forEach(ovalContainRefs, (singleRef, index) => {\n        if(index % 2 === 0) {\n            TweenLite.to(singleRef, 0, {left: -500})\n        }\n        else TweenLite.to(singleRef, 0, {left: 500})\n    })\n}\n\nconst buttonClickAnimation = (setNextQuestion, clickedButtonRef, ref, n) => {\n    const buttonTween = new TimelineLite({onComplete: setNextQuestion, onCompleteParams: [n]})\n    buttonTween.to(clickedButtonRef, 0.4, {scaleY: 1.2, scaleX: 1.2,  ease: Power2.easeInOut})\n    buttonTween.to(clickedButtonRef, 0.1, {scaleY: 0, scaleX: 0, ease: Power2.easeIn})\n    buttonTween.to(ref.current, 0.3, {opacity: 0, delay: 0.2})\n    buttonTween.to(clickedButtonRef, 0, {scaleY: 1, scaleX: 1})\n}\n\nconst ovalClickAnimation = (setNextQuestion, clickedButtonRef, ref, n, contain) => {\n    const buttonTween = new TimelineLite({onComplete: setNextQuestion, onCompleteParams: [n]})\n    buttonTween.to(contain, 0.4, {left: 500, ease: Power2.easeIn});\n    buttonTween.to(ref.current, 0.5, {opacity: 0, delay: 0.2}); \n    buttonTween.to(clickedButtonRef, 0 ,{fill: \"#ee936c\"})\n    buttonTween.to(clickedButtonRef, 0, {scaleY: 1, transformOrigin:\"50% 50%\"});\n\n}\n\nexport {buttonIntro, resetButtonPositions, buttonClickAnimation, ovalClickAnimation, fadeIn, resetOvalButtonPositions}","const questionAnswerPairs =\n[\n\t{\n\t\tcategory: \"type\",\n\t\tquestions: [\n\t\t\t{\n\t      question_id: 1,\n\t      question_text: \"Give me something...\",\n\t      answer_options: [\n\t          { answer_text: \"sweet\",\n\t            answer_id: 1,\n\t            answer_tag_category: \"type\",\n\t            answer_tag: \"sweet\"\n\t          },\n\t          { answer_text: \"savoury\",\n\t            answer_id: 2,\n\t            answer_tag_category: \"type\",\n\t            answer_tag: \"savoury\"\n\t          },\n\t          { answer_text: \"spicy\",\n\t            answer_id: 3,\n\t            answer_tag_category: \"type\",\n\t            answer_tag: \"spicy\"\n\t          },\n\t          { answer_text: \"icy\",\n\t            answer_id: 4,\n\t            answer_tag_category: \"type\",\n\t            answer_tag: \"icy\"\n\t          },\n\t      ]\n  \t\t}\n\t\t],\n\t},\n\n\t{\n\t\tcategory: \"difficulty\",\n\t\tquestions: [\n\t\t\t{\n\t\t\t\tquestion_id: 2,\n\t      question_text: \"My motto in the kitchen is...\",\n\t      answer_options: [\n\t          { answer_text: \"Go big or go home\",\n\t            answer_id: 1,\n\t            answer_tag_category: \"difficulty\",\n\t            answer_tag: \"challenging\"\n\t          },\n\t          { answer_text: \"Less is more\",\n\t            answer_id: 2,\n\t            answer_tag_category: \"difficulty\",\n\t            answer_tag: \"simple\"\n\t          },\n\t          { answer_text: \"A messy kitchen is a happy kitchen\",\n\t            answer_id: 3,\n\t            answer_tag_category: \"difficulty\",\n\t            answer_tag: \"time-consuming\"\n\t          },\n\t          { answer_text: \"Fake it till you make it\",\n\t            answer_id: 4,\n\t            answer_tag_category: \"difficulty\",\n\t            answer_tag: \"easy\"\n\t          },\n\t      ]\n\t    },\n\t    {\n\t    \tquestion_id: 3,\n\t      question_text: \"Cooking is the best when...\",\n\t      answer_options: [\n\t          { answer_text: \"it’s quick and easy\",\n\t            answer_id: 1,\n\t            answer_tag_category: \"difficulty\",\n\t            answer_tag: \"easy\"\n\t          },\n\t          { answer_text: \"there is little to clean up\",\n\t            answer_id: 2,\n\t            answer_tag_category: \"difficulty\",\n\t            answer_tag: \"simple\"\n\t          },\n\t          { answer_text: \"it's challenging\",\n\t            answer_id: 3,\n\t            answer_tag_category: \"difficulty\",\n\t            answer_tag: \"time-consuming\"\n\t          },\n\t          { answer_text: \"Fake it till you make it\",\n\t            answer_id: 4,\n\t            answer_tag_category: \"difficulty\",\n\t            answer_tag: \"challenging\"\n\t          },\n\t      ]\n\t    },\n\t    {\n\t    \tquestion_id: 4,\n\t      question_text: \"Who’s coming over?\",\n\t      question_category: \"difficulty\",\n\t      next_question: 7,\n\t      answer_options: [\n\t          { answer_text: \"The Queen\",\n\t            answer_id: 1,\n\t            answer_tag_category: \"difficulty\",\n\t            answer_tag: \"challenging\"\n\t          },\n\t          { answer_text: \"Winnie the Pooh\",\n\t            answer_id: 2,\n\t            answer_tag_category: \"difficulty\",\n\t            answer_tag: \"simple\"\n\t          },\n\t          { answer_text: \"Batman\",\n\t            answer_id: 3,\n\t            answer_tag_category: \"difficulty\",\n\t            answer_tag: \"easy\"\n\t          },\n\t          { answer_text: \"No one, I’m locking my door!\",\n\t            answer_id: 4,\n\t            answer_tag_category: \"difficulty\",\n\t            answer_tag: \"time-consuming\"\n\t          },\n\t      ]\n\t    },\n\t\t]\n\t},\n\n{\n\tcategory: \"nutrition\",\n\tquestions: [\n\t\t{\n\t\t\tquestion_id: 5,\n      question_text: \"What do you crave?\",\n      answer_options: [\n          { answer_text: \"Food coma, here I come!\",\n            answer_id: 1,\n            answer_tag_category: \"nutrition\",\n            answer_tag: \"unhealthy\"\n          },\n          { answer_text: \"Something light\",\n            answer_id: 2,\n            answer_tag_category: \"nutrition\",\n            answer_tag: \"healthy\"\n          },\n          { answer_text: \"I don’t care, I’m hangry!\",\n            answer_id: 3,\n            answer_tag_category: \"nutrition\",\n            answer_tag: \"unhealthy\"\n          },\n          { answer_text: \"Surprise me!\",\n            answer_id: 4,\n            answer_tag_category: \"nutrition\",\n            answer_tag: \"healthy\"\n          },\n      ]\n\t\t},\n\t\t{\n\t\t\tquestion_id: 6,\n      question_text: \"A nutritious meal is…\",\n      answer_options: [\n          { answer_text: \"the best kind of meal!\",\n            answer_id: 1,\n            answer_tag_category: \"nutrition\",\n            answer_tag: \"healthy\"\n          },\n          { answer_text: \"a necessary evil.\",\n            answer_id: 2,\n            answer_tag_category: \"nutrition\",\n            answer_tag: \"healthy\"\n          },\n          { answer_text: \"a bonus\",\n            answer_id: 3,\n            answer_tag_category: \"nutrition\",\n            answer_tag: \"unhealthy\"\n          },\n          { answer_text: \"Not an option\",\n            answer_id: 4,\n            answer_tag_category: \"nutrition\",\n            answer_tag: \"unhealthy\"\n          },\n      ]\n\t\t}\n\t]\n},\n\n{\n\tcategory: \"season\",\n\tquestions: [\n\t\t{\n\t\t\tquestion_id: 7,\n      question_text: \"I feel inspired by…\",\n      answer_options: [\n          { answer_text: \"autmn leaves\",\n            answer_id: 1,\n            answer_tag_category: \"season\",\n            answer_tag: \"autmn\"\n          },\n          { answer_text: \"sunshine\",\n            answer_id: 2,\n            answer_tag_category: \"season\",\n            answer_tag: \"spring\"\n          },\n          { answer_text: \"the beach\",\n            answer_id: 3,\n            answer_tag_category: \"season\",\n            answer_tag: \"summer\"\n          },\n          { answer_text: \"friday nights\",\n            answer_id: 4,\n            answer_tag_category: \"season\",\n            answer_tag: \"winter\"\n          },\n      ]\n\t\t},\n\t\t{\n\t\t\tquestion_id: 8,\n      question_text: \"My secret ingredient is…\",\n      answer_options: [\n          { answer_text: \"love\",\n            answer_id: 1,\n            answer_tag_category: \"season\",\n            answer_tag: \"spring\"\n          },\n          { answer_text: \"food delivery\",\n            answer_id: 2,\n            answer_tag_category: \"season\",\n            answer_tag: \"autumn\"\n          },\n          { answer_text: \"a secret\",\n            answer_id: 3,\n            answer_tag_category: \"season\",\n            answer_tag: \"summer\"\n          },\n          { answer_text: \"plenty of salt\",\n            answer_id: 4,\n            answer_tag_category: \"season\",\n            answer_tag: \"winter\"\n          },\n      ]\n\t\t},\n\t\t{\n\t\t\tquestion_id: 9,\n      question_text: \"Today’s soundtrack is…\",\n      answer_options: [\n          { answer_text: \"Hakuna Matata\",\n            answer_id: 1,\n            answer_tag_category: \"season\",\n            answer_tag: \"summer\"\n          },\n          { answer_text: \"Don’t Stop Believing\",\n            answer_id: 2,\n            answer_tag_category: \"season\",\n            answer_tag: \"spring\"\n          },\n          { answer_text: \"Ice Ice Baby\",\n            answer_id: 3,\n            answer_tag_category: \"season\",\n            answer_tag: \"winter\"\n          },\n          { answer_text: \"All You Need Is Love\",\n            answer_id: 4,\n            answer_tag_category: \"season\",\n            answer_tag: \"autmun\"\n          },\n      ]\n\t\t}\n\t]\n}\n]\n\n\nexport default questionAnswerPairs\n","import React from 'react';\nimport { useRef, useEffect, useState } from 'react';\nimport {TweenLite, Power2, TimelineLite} from \"gsap/TweenMax\";\nimport _ from 'lodash'\n\n\n\n\nconst RecipeView = (props) => {\n    const containRef = useRef(null)\n    const gradientRef = useRef(null)\n    const homeRef = useRef(null)\n    const Tags = () => props.tags.map(v => <div>{v}</div>)\n    const DietTags = () => props.selectedDietTags.map(v => <div>{v}</div>)\n    const [finalRecipes, setFinalRecipes] = useState([])\n    const [likes, setLikes] = useState(0)\n    const [clicked, setClicked] = useState(false)\n    const [finalRecipe, setFinalRecipe] = useState([])\n    const animateFunction = (func) => {\n        const tween = TweenLite.to(containRef.current, 1, { opacity: 0, ease: Power2.easeInOut})\n        const tween1 = TweenLite.to(gradientRef.current, 1, { opacity: 0, ease: Power2.easeInOut})\n        const tween2 = TweenLite.to(homeRef.current, 1, { opacity: 0, ease: Power2.easeInOut})\n        tween.eventCallback(\"onComplete\", func)\n\n    }\n\n    const recipePriority = [[\"sweet\", \"savoury\", \"spicy\", \"icy\"], [\"simple\", \"challenging\", \"time-consuming\", \"easy\"], [\"healthy\", \"unhealthy\"], [\"spring\", \"summer\", \"autumn\", \"winter\"]]\n\n    const fireBaseInit = async () => {\n          const database = props.firebaseState.database()\n          const asd = await database.ref('/recipes/').once('value')\n          const recipeJson = asd.toJSON()\n          let filteredRecipes = []\n\n          // this is so lazy but it works\n          const sortTags = () => {\n              let newArr = [\"\", \"\", \"\", \"\"]\n              _.forEach(props.tags, (tag) => {\n                  if(_.includes(recipePriority[0], tag)) {\n                      newArr[0] = tag\n                  }\n                  else if (_.includes(recipePriority[1], tag)) {\n                       newArr[1] = tag\n                  }\n                  else if (_.includes(recipePriority[2], tag)) {\n                       newArr[2] = tag\n                  }\n                  else if (_.includes(recipePriority[3], tag)) {\n                       newArr[3] = tag\n                  }\n              })\n              return newArr\n          }\n\n          const sortedTags = sortTags()\n\n          _.forEach(recipeJson, (recipe) => {\n              let thisArrayShouldBeAllTrue = [] // lol lets make an array that should only contain true values if recipe contains correct diet tags\n                _.forEach(props.selectedDietTags, (dietTag) => {\n                    const doesItInclude = _.includes(recipe.tags, dietTag)   // check that the current recipe that is being iterated contains a single diet tag.\n                    thisArrayShouldBeAllTrue.push(doesItInclude)\n                }) // loop through diet tags\n                // now lets check which of the recipes include the tags the user has selected\n                const check = thisArrayShouldBeAllTrue.every((val) => val === true)\n                if(check) {\n                    filteredRecipes.push(recipe)\n                }\n                // now lets move on to filtering by tags\n          })\n    \n          let finalRecipes = []\n\n\n          _.forEach(filteredRecipes, (recipe) => {\n            let thisArrayShouldBeAllTrue = []\n            // first find all recipes with the first tag that is tru\n          _.forEach(sortedTags, (tag) => {\n              const doesItInclude = _.includes(recipe.tags, tag)\n              thisArrayShouldBeAllTrue.push(doesItInclude)\n          })\n          const check = thisArrayShouldBeAllTrue.every((val) => val === true)\n          if (check) {\n              finalRecipes.push(recipe)\n          }\n      })\n\n      // ok now if final recipes is empty, lets lower priority\n\n\n      if(finalRecipes.length < 1) {\n          finalRecipes = []\n          sortedTags.pop()\n        _.forEach(filteredRecipes, (recipe) => {\n            let thisArrayShouldBeAllTrue = []\n            _.forEach(sortedTags, (tag) => {\n                const doesItInclude = _.includes(recipe.tags, tag)\n                thisArrayShouldBeAllTrue.push(doesItInclude)\n            })\n            const check = thisArrayShouldBeAllTrue.every((val) => val === true)\n            if (check) {\n                finalRecipes.push(recipe)\n            }\n        })\n      }\n\n\n      if(finalRecipes.length < 1) {\n        finalRecipes = []\n        sortedTags.pop()\n      _.forEach(filteredRecipes, (recipe) => {\n          let thisArrayShouldBeAllTrue = []\n          _.forEach(sortedTags, (tag) => {\n              const doesItInclude = _.includes(recipe.tags, tag)\n              thisArrayShouldBeAllTrue.push(doesItInclude)\n          })\n          const check = thisArrayShouldBeAllTrue.every((val) => val === true)\n          if (check) {\n              finalRecipes.push(recipe)\n          }\n      })\n    }\n\n\n    if(finalRecipes.length < 1) {\n        finalRecipes = []\n        sortedTags.pop()\n      _.forEach(filteredRecipes, (recipe) => {\n          let thisArrayShouldBeAllTrue = []\n          _.forEach(sortedTags, (tag) => {\n              const doesItInclude = _.includes(recipe.tags, tag)\n              thisArrayShouldBeAllTrue.push(doesItInclude)\n          })\n          const check = thisArrayShouldBeAllTrue.every((val) => val === true)\n          if (check) {\n              finalRecipes.push(recipe)\n          }\n      })\n    }\n\n\n          setFinalRecipes(finalRecipes)\n          const random = Math.floor(Math.random() * finalRecipes.length)\n          setFinalRecipe(finalRecipes[random]) // this should be random\n\n    }\n\n    useEffect(() => {\n        fireBaseInit()\n    }, [])\n\n    const drawNewRecipe = () => {\n        setClicked(false)\n        const generateRandom = (min, max) => {\n            const notThisOne = _.findIndex(finalRecipes, (n) => n === finalRecipe)\n            var num = Math.floor(Math.random() * (max - min + 1)) + min;\n            return (num === notThisOne) ? generateRandom(min, max) : num;\n        }\n        let random =  generateRandom(0, finalRecipes.length - 1)\n        setFinalRecipe(finalRecipes[random])\n    }\n    const introAnimation = () => {\n        const tweeny= new TimelineLite();\n        tweeny.to(gradientRef.current, 0, {opacity: 0})\n        tweeny.to(homeRef.current, 0, {opacity: 0})\n        tweeny.to(containRef.current, 0, {opacity: 0})\n        tweeny.to([containRef.current, homeRef.current, gradientRef.current], 1, {opacity: 1})\n    }\n\n    useEffect(() => {\n        introAnimation();\n    },[])\n\n\n    const likeRecipe = async () => {\n        await props.firebaseState.database().ref(\"/recipes/\").orderByChild('id').equalTo(finalRecipe.id).on(\"child_added\", (snapshot) => {\n            props.firebaseState.database().ref(\"/recipes/\"+snapshot.key).update({likes: finalRecipe.likes + 1})\n        })\n        setFinalRecipe(Object.assign(finalRecipe, {likes: finalRecipe.likes + 1}))\n        setClicked(true)\n        setLikes(finalRecipe.likes)\n       \n    }\n\n\n    return (\n    <div className='main-container'>\n        <div className='top-gradient opacity' ref={gradientRef}>\n        </div>\n        <div onClick={() => animateFunction(props.goHome)} className='home opacity' ref={homeRef}>Home</div>\n        <div ref={containRef} className='recipe-contain opacity'>\n            <h3 className='makesome'>Make some:</h3>\n            <h1 className='recipename'>{finalRecipe.length !== 0 ? finalRecipe.name : null}</h1>\n            <div className='time'>takes {finalRecipe.length !== 0 ? finalRecipe.time : null} to cook</div>\n            <div className='servings'>has {finalRecipe.length !== 0 ? finalRecipe.servings : null} servings</div>\n        <div className='final-img' style={{backgroundImage: `url(/recipegen/${finalRecipe.img})`}}></div>\n        <div className='likes'>\n            This recipe has {clicked ? likes : finalRecipe.likes} likes\n            <div className='likebutton' onClick={()=>likeRecipe()} >Click to like</div>\n        </div>\n        <div className='final-button-contain'>\n            {/* <button className='final-button' onClick={() => setShowRecipe(!showRecipe)}>See full recipe</button> */}\n            {finalRecipes.length > 1 ? <button onClick={() => drawNewRecipe()}className='final-button'>New suggestion</button> : null}\n        </div>\n        <div className='recipe'>\n            <div className='ingredients-title'>Ingredients:</div>\n            <ul className='ingredients'>{finalRecipe.length !== 0 ? Object.keys(finalRecipe.ingredients).map((key) => <li>{'- ' + finalRecipe.ingredients[key]}</li>) : null}</ul>\n            <div className='instructions-title'>Instructions:</div>\n            <ul className='instructions'>{finalRecipe.length !== 0 ? Object.keys(finalRecipe.instructions).map((key) => <li>{Number(key)+1 + '. ' + finalRecipe.instructions[key]}</li>) : null}</ul>\n        </div>\n        </div>\n\n    </div>\n    )\n}\n\nexport default RecipeView","import React from 'react'\nimport _ from 'lodash'\nimport {useEffect, useState, useRef} from 'react'\nimport {TimelineLite} from 'gsap'\n\nconst DietButtons = ({selectedTags, setSelectedTags, tags, buttonClicked, clickBlock, fadeIn, setFadeIn}) => {\n\n  const [elements, setElements] = useState([])\n  const isFirstRun = useRef(true);\n\n  const buttonClick = (dietn) => {\n    if(clickBlock) {\n      return null\n    }\n    else {\n    // if selected tags include word of the clicked button remove from selected tags\n      const copyOfSelectedTags = selectedTags.slice()\n      if (_.includes(selectedTags, dietn)) {\n            _.remove(copyOfSelectedTags, (tag) => {\n                return (tag === dietn)\n            })\n            setSelectedTags(copyOfSelectedTags)\n        }\n        else {\n            copyOfSelectedTags.push(dietn)\n            setSelectedTags(copyOfSelectedTags)\n        }\n    }\n  }\n\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n  }\n    const myTween = new TimelineLite();\n    myTween.staggerTo(elements, 0.1, {opacity: 0, visibility: 'hidden'}, 0.1);\n    myTween.play()\n  }, [buttonClicked, elements])\n\n  useEffect(() => {\n    if (fadeIn) {\n      const myTween = new TimelineLite();\n      myTween.to(elements, 0, {opacity: 0, visibility: 'hidden'}, 0);\n      myTween.to(elements, 0.8, {opacity: 1, visibility: 'visible', delay: 0.2});\n      myTween.play()\n      setFadeIn(false)\n\n    }\n  })\n\n  const ifDF = (diet) => {\n    return diet === 'DF' ? 'dairy-free' : diet === 'GF' ? 'gluten-free' : diet\n  } \n\n\n    const className = (dietn) => _.includes(selectedTags, dietn) ? 'diet-button--selected' : 'diet-button'\n\n\n    const buttons = tags.map((diet, index) => <button ref={button => elements[index] = button} key={diet} onClick={() => buttonClick(diet)} className={`${className(diet)} opacity`}>{ifDF(diet)}</button>)\n  return (\n    <div className='diet-button-container'>\n      {buttons}\n    </div>\n  )\n}\n\nexport default DietButtons","import React from 'react'\nimport {TweenLite, TweenMax, TimelineMax, CSSPlugin, Power2} from \"gsap/TweenMax\";\nimport {useState, useEffect, useRef } from 'react'\nimport DietButtons from './DietButtons'\n\nconst LandingPage = (props) => {\n    const refButton = useRef(null);\n    const refTitle = useRef(null)\n    const refSub = useRef(null)\n    const refMainContainer = useRef(null) // card flip animation, refers to main container class\n    const refCard = useRef(null) // card flip animation, refers to container that contains card faces\n    const refBack = useRef(null) // card flip animation, refers to back card face\n    const refFront = useRef(null) // card flip animation, refers to front\n    const [buttonClicked, setButtonClicked] = useState(false)\n    const isFirstRun = useRef(true);\n    const [animation, setAnimation] = useState(null)\n    const [fadeIn, setFadeIn] = useState(false)\n    const whatIsThisRef = useRef(null)\n\n    const checkForClickBlock = () => {\n      if(props.clickBlock) {\n        return null\n      }\n      else {\n        setButtonClicked(true)\n      }\n    }\n\n\n  const flipCard = (reverse) => {\n    props.setClickBlock(true)\n    CSSPlugin.defaultTransformPerspective = 1000;\n    TweenMax.set((refBack.current), {rotationY:-180});\n    const tl = new TimelineMax({paused:true})\n      .to(refFront.current, 1, {rotationY:180, ease: Power2.easeInOut})\n      .to(refBack.current, 1, {rotationY:0, ease: Power2.easeInOut},0)\n\n\n    tl.eventCallback(\"onComplete\", props.setClickBlock, [false])\n\n    tl.play()\n    setAnimation(tl)\n\n  }\n\n  const reverseCard = () => {\n    animation.reverse()\n  }\n\n  const fadeInAnim = () => {\n    setFadeIn(true)\n    TweenLite.to(refButton.current, 0, { opacity: 0 })\n    TweenLite.to(refTitle.current, 0, { opacity: 0 })\n    TweenLite.to(refSub.current, 0, { opacity: 0 })\n    TweenLite.to(whatIsThisRef.current, 0, { opacity: 0 })\n    TweenLite.to(refButton.current, 0.8, { opacity: 1 , delay: 0.2})\n    TweenLite.to(refTitle.current, 0.8, { opacity: 1, delay: 0.2 })\n    TweenLite.to(refSub.current, 0.8, { opacity: 1, delay: 0.2 })\n    TweenLite.to(whatIsThisRef.current, 0.8, { opacity: 1, delay: 0.2 })\n  }\n\n\n\n  useEffect(() => {\n    if (isFirstRun.current) {\n      fadeInAnim()\n      isFirstRun.current = false;\n      return;\n    }\n    if(buttonClicked) {\n      const tweenButton = TweenLite.to(refButton.current, 0.8, { opacity: 0 })\n      TweenLite.to(refTitle.current, 0.8, { opacity: 0 })\n      TweenLite.to(refSub.current, 0.8, { opacity: 0 })\n      TweenLite.to(whatIsThisRef.current, 0.8, { opacity: 0 })\n\n      tweenButton.eventCallback(\"onComplete\", props.start)\n    }\n  }, [buttonClicked, props.start]);\n\n\n  return (\n    <div \n      ref={refMainContainer} \n      className='main-container--landing-page'>\n      <div \n      className='cards-container' \n      ref={refCard} >\n        <div className='backOfCard card' ref={refBack}>\n          <h1 className='about-title'>About recipe generator</h1>\n          <p className='about'>Recipe Generator is a playful service that aims to provide recipe inspiration. The service suggests a recipe to the user based on a series of questions that must first be answered. The questions are presented through a simplified, easy-to-use, and visually attractive interface. Give it a try and find new and exciting recipes! </p>\n          <p className='about'>Created by: Maija Jääskeläinen, Aleksi O'Connor and Laura Toikka</p>\n          <button className='final-button' onClick={()=>reverseCard()} >Back</button>\n        </div>\n        <div className='backOfCard card' ref={refFront}>\n          <img ref={refTitle} className='logo' src='/recipegen/logo.png' alt='logo'></img>\n          <h5 className='opacity' ref={refSub}>\n            Any preferences before we start?\n          </h5>\n          <DietButtons \n            clickBlock={props.clickBlock} \n            fadeIn={fadeIn}\n            setFadeIn={setFadeIn}\n            buttonClicked={buttonClicked} \n            selectedTags={props.selectedTags} \n            setSelectedTags={props.setSelectedTags} \n            tags={props.tags}/>\n          <button \n            className='start-button' \n            ref={refButton} \n            onClick={()=>checkForClickBlock() }>\n              GO\n            </button>\n          <div onClick={()=>flipCard(false)} className='help' ref={whatIsThisRef}>\n            What is this?\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LandingPage","import React from 'react';\nimport {useState, useEffect} from 'react'\nimport QuestionView from './QuestionView'\nimport _ from 'lodash'\nimport questionAnswerPairs from './questions'\nimport RecipeView from './RecipeView'\nimport LandingPage from './LandingPage'\nimport 'normalize.css';\nimport './Style.css'\nimport * as firebase from \"firebase/app\";\nimport 'firebase/database'\n\nfunction App() {\n\n\n  const drawQuestion = (len) => {\n    const emptyArr = []\n    _.forEach(questionAnswerPairs, (category) => {\n      const selected = _.shuffle(category.questions).slice(0, 1)\n      emptyArr.push(selected[0])\n    })\n    return _.shuffle(emptyArr)\n  }\n\n\n\n  // How many questions are shown to the user\n  const [thisManyQuestions] = useState(4)\n\n  const [questions, setQuestions] = useState(drawQuestion(thisManyQuestions))\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0)\n  const [tags, setTags] = useState([])\n  const [landingPage, setLandingPage] = useState(true)\n  const [clickBlock, setClickBlock] = useState(false)\n\n  // used for diet seleciton in beginning\n  const [selectedDietTags, setSelectedDietTags] = useState([])\n  const dietTags = ['pescatarian', 'DF', 'GF', 'vegan', 'vegetarian']\n  const [firebaseState, setFirebaseState] = useState(null)\n\n  useEffect(() => {\n    const firebaseConfig = {\n      apiKey: \"AIzaSyA8YvUHrQ46G-2AzTZ8FCcurpgwaGuj04g\",\n      authDomain: \"recipegen-fa395.firebaseapp.com\",\n      databaseURL: \"https://recipegen-fa395.firebaseio.com\",\n      projectId: \"recipegen-fa395\",\n      storageBucket: \"recipegen-fa395.appspot.com\",\n    }\n\n    firebase.initializeApp(firebaseConfig);\n    setFirebaseState(firebase)\n  },[])\n\n  const setNextQuestion = (answer) => {\n    const newTags = tags.slice(0)\n    const answer_tag = answer.answer_tag\n    newTags.push(answer_tag)\n    setTags(newTags)\n    // add answer tag to tag array\n    setCurrentQuestionIndex(currentQuestionIndex + 1)\n    setClickBlock(false)\n    console.log(clickBlock, \"value of block\")\n  }\n\n  const restart = () => {\n    setQuestions(drawQuestion(5))\n    setTags([])\n    setCurrentQuestionIndex(0)\n  }\n\n  const start = () => {\n    setLandingPage(false)\n  }\n\n  const restartAndLandingPage = () => {\n    restart()\n    setLandingPage(true)\n  }\n\n\n\n\n\n  return (\n    <div>\n        {landingPage ? <LandingPage clickBlock={clickBlock} setClickBlock={setClickBlock} start={start} selectedTags={selectedDietTags} setSelectedTags={setSelectedDietTags} tags={dietTags}/> : currentQuestionIndex > thisManyQuestions - 1 ? \n        <RecipeView firebaseState={firebaseState} selectedDietTags={selectedDietTags} restart={restart} tags={tags} goHome={() => restartAndLandingPage()}></RecipeView> : \n        <QuestionView clickBlock={clickBlock} setClickBlock={setClickBlock} currentQuestionIndex={currentQuestionIndex} setNextQuestion={setNextQuestion} questions={questions}></QuestionView>}\n        \n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n    google: {\n      families: ['Pontano Sans', 'Roboto:400,500,700']\n    }\n  });\n\nReactDOM.render(\n        <App />,\ndocument.getElementById('root'));\n\n\n"],"sourceRoot":""}